# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

d = {}


def fibonacci(i):
    if d.get(i, None) != None:
        return d.get(i, None)
    if i <= 2:
        d[i] = 1
        return 1
    else:
        d[i] = fibonacci(i - 1) + fibonacci(i - 2)
        return d[i]

n=0
while fibonacci(n) < 4000000:
    n+=1

print(sum([d[i] if d[i] % 2 == 0 else 0 for i in range(0,n)]))
